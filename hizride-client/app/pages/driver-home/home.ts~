import {Component, ViewChild, ElementRef} from '@angular/core';
import {NavController} from 'ionic-angular';
import {Geolocation} from 'ionic-native';
 
declare var google;
toValue:string;
fromValue:string;

 
@Component({
  templateUrl: 'build/pages/home/home.html'
})
export class HomePage {
 
  @ViewChild('map') mapElement: ElementRef;
  map: any;
 
  constructor(public navCtrl: NavController) {
	this.fromValue ="";
 	this.toValue = "";
  }
 
  ionViewLoaded(){
    this.loadMap();
  }
 
  loadMap(){
 
    Geolocation.getCurrentPosition().then((position) => {
 
      let latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
 
      let mapOptions = {
        center: latLng,
        zoom: 15,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      }
 
      this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);
 
    }, (err) => {
      console.log(err);
    });
 
  }

addMarker(){
 
  let marker = new google.maps.Marker({
    map: this.map,
    animation: google.maps.Animation.DROP,
    position: this.map.getCenter()
  });
 
  let content = "<h4>Information!</h4>";          
 
  this.addInfoWindow(marker, content);
 
}

addInfoWindow(marker, content){
 
  let infoWindow = new google.maps.InfoWindow({
    content: content
  });
 
  google.maps.event.addListener(marker, 'click', () => {
    infoWindow.open(this.map, marker);
  });
 
}
ngOnInit(){

  // get the two fields
  let input_from = (<HTMLInputElement>document.getElementById("journey_from"));
  let input_to = (<HTMLInputElement>document.getElementById("journey_to"));

// set the options
  let options = {
    types: [],
    componentRestrictions: {country: "uk"}
  };

  // create the two autocompletes on the from and to fields
  let autocomplete1 = new google.maps.places.Autocomplete(input_from, options);
  let autocomplete2 = new google.maps.places.Autocomplete(input_to, options);

  // we need to save a reference to this as we lose it in the callbacks
  let self = this;

  // add the first listener
  google.maps.event.addListener(autocomplete1, 'place_changed', function() {

      let place = autocomplete1.getPlace();
      let geometry = place.geometry;
      if ((geometry) !== undefined) {

           console.log(place.name);

           console.log(geometry.location.lng());

           console.log(geometry.location.lat());

     });

  // add the second listener
  google.maps.event.addListener(autocomplete2, 'place_changed', function() {
      let place = autocomplete2.getPlace();
      let geometry = place.geometry;

      if ((geometry) !== undefined) {

         console.log(place.name);

         console.log(geometry.location.lng());

         console.log(geometry.location.lat());

       });

   });

}


 
}
